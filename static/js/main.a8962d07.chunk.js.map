{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storangeService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","SetInit","SetUserObj","onAuthStateChanged","user","ind","indexOf","end","substring","toString","args","currentUser","Boolean","getUTCFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8962d07.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storangeService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\n// const inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        let data;\r\n        try{\r\n\r\n            if(newAccount){\r\n            data =  await  authService.createUserWithEmailAndPassword(email, password);\r\n            } else{\r\n            data =    await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} className=\"authInput authSubmit\"/>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n    </form>\r\n    <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n   \r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n    </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { dbService, storangeService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nweet =({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wnat to delete this nweet?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storangeService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input onChange={onChange} type=\"text\" placeholder =\"Edit your nweet\" value={newNweet} required autoFocus className=\"formInput\"/>\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                </form> \r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n                ) : ( \r\n                    <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"\"/>}\r\n                    { isOwner &&\r\n                    (<div class=\"nweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </span>\r\n                    </div>\r\n                    )\r\n                    }\r\n                    </>\r\n                    )\r\n            }\r\n        </div> \r\n    )}\r\n\r\nexport default Nweet;\r\n","import React, { useState } from 'react';\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storangeService } from 'fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storangeService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL()\r\n\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget:{result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n            <input id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}/>\r\n            \r\n            {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n            </div> \r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nconst Home = ({userObj}) => \r\n{ \r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n            {nweets.map(nweet => \r\n            <Nweet key={nweet.id} nweetObj={nweet}  isOwner={nweet.creatorId === userObj.uid}/>\r\n            )}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}'s Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n    </nav>);\r\n\r\nexport default Navigation;","import { authService, /*dbService */ } from 'fbase';\r\nimport React/*, { useEffect }*/ , {useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function Profile({refreshUser, userObj }) {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    \r\n    // const getMyNweets = async () => {\r\n    //       const nweets = await dbService\r\n    //         .collection(\"nweets\")\r\n    //         .where(\"creatorId\", \"==\", userObj.uid)\r\n    //         .orderBy(\"createdAt\")\r\n    //         .get();\r\n    //       console.log(nweets.docs.map((doc) => doc.data()));\r\n    //       console.log(userObj.displayName);\r\n    // };\r\n    // useEffect(() => {\r\n    //   getMyNweets();\r\n    // }, []); \r\n    const onChange = (event) => {\r\n      const {\r\n        target: { value },\r\n      } = event;\r\n      setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      if (userObj.displayName !== newDisplayName) {\r\n        await userObj.updateProfile({\r\n          displayName: newDisplayName,\r\n        });\r\n        refreshUser();\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input onChange={onChange} type=\"text\" placeholder=\"Display Name\" value={newDisplayName} autoFocus className=\"formInput\"/>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }} />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n  };","import React from 'react';\r\nimport {HashRouter as Router, Route, Switch  } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div\r\n                style={{\r\n                  maxWidth: 890,\r\n                  width: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  marginTop: 80,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}  />\r\n                </Route> \r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                </Route> \r\n                </div> )\r\n                    : (\r\n                        <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                </> ) }\r\n            </Switch>\r\n        </Router>\r\n        );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n  const [init, SetInit] = useState(false);\n  const [userObj, SetUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        //add\n        if(user.displayName === null){\n          // user.updateProfile({\n          //   displayName: \"Nwitter\",\n          // })\n          const ind = user.email.indexOf (\"@\");\n          const end = user.email.substring (0, ind);\n          user.updateProfile ({displayName: end.toString()});\n        }//\n        SetUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        SetUserObj(null);\n      }\n      SetInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    SetUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n  {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n  <footer>&copy; {new Date().getUTCFullYear()} Nwitter</footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}